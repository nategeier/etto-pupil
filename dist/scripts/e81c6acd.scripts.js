"use strict";angular.module("ettoPupil",["ngRoute","ngSanitize","ngResource","ngAnimate","ngTouch","ui.bootstrap","xeditable","angularFileUpload","chieffancypants.loadingBar","leaflet-directive","ngAutocomplete"]).config(["$routeProvider","$locationProvider","$httpProvider",function($routeProvider,$locationProvider,$httpProvider){$httpProvider.defaults.withCredentials=!0,$httpProvider.interceptors.push("httpInterceptor"),$locationProvider.html5Mode(!0).hashPrefix("#"),$routeProvider.when("/",{templateUrl:"/views/landing.html",controller:"LandingCtrl"}).when("/terms",{templateUrl:"/views/terms.html",controller:"TermsCtrl"}).when("/beta",{templateUrl:"/views/beta.html"}).when("/reset/:code",{templateUrl:"/views/resetPassword.html"}).when("/etto",{templateUrl:"/views/home.html",controller:"HomeCtrl"}).when("/login/:companyId",{templateUrl:"/views/loginPage.html",controller:"LoginPageCtrl"}).when("/company/:companyId",{templateUrl:"/views/company.html",controller:"CompanyCtrl"}).when("/report/:parentID",{templateUrl:"/views/reports.html",controller:"ReportsCtrl"}).when("/tier/edit/:id",{templateUrl:"/views/editTier.html",controller:"TierCtrl"}).when("/store/:tierID",{templateUrl:"/views/store.html",controller:"StoreCtrl"}).when("/invited/:id",{templateUrl:"/views/register_invite.html",controller:"InviteCtrl"}).when("/settings/:userID",{templateUrl:"/views/settings.html",controller:"SettingsCtrl"}).when("/subscription/:userID",{templateUrl:"/views/Subscription.html",controller:"SubscriptionCtrl"}).when("/payments/:userID",{templateUrl:"/views/payments.html",controller:"PaymentsCtrl"}).when("/session/destroy",{controller:"LogoutCtrl",templateUrl:"/views/home.html"}).when("/course/demo/:courseId",{templateUrl:"/views/CourseView.html",controller:"CourseDemoCtrl",resolve:{course:function(CourseLoader){return new CourseLoader}}}).when("/course/view/:courseId",{templateUrl:"/views/CourseView.html",controller:"CourseViewCtrl",resolve:{course:function(CourseLoader){return new CourseLoader}}}).when("/course/edit/:courseId",{templateUrl:"/views/CourseEdit.html",controller:"CourseEditCtrl",resolve:{course:function(CourseLoader){return new CourseLoader}}}).when("/assets",{templateUrl:"/views/AssetLibrary.html",controller:"AssetLibrary",resolve:{assets:function(AssetLoader){return new AssetLoader}}}).otherwise({redirectTo:"/etto"})}]).run(function($rootScope,editableOptions){var environment="production";"production"===environment&&($rootScope.config={api:{server:"https://api.coursetto.com",version:""},aws:{bucket:"etto-production"},socketUrl:"https://api.coursetto.com"}),"development"===environment&&($rootScope.config={api:{server:"/",version:"api/v1"},aws:{bucket:"etto-archimedes-test"},socketUrl:"http://localhost:4220"}),editableOptions.theme="bs3"}),angular.module("ettoPupil").controller("LandingCtrl",["$scope","$location","Session","Payment","WhiteLabel",function($scope,$location,Session,Payment,WhiteLabel){$scope.currentSubscription=0,$scope.show=function(id){$scope.onSubscription=id},Payment.subscriptions(function(results){$scope.subscriptionTypes=results,$scope.onSubscription=$scope.subscriptionTypes[0]._id}),Session.getSession(function(data){data?$location.path("/etto"):WhiteLabel.setFonts("Lato")})}]),angular.module("ettoPupil").controller("CompanyCtrl",["$scope","$routeParams","Session","Tiers","WhiteLabel","Fonts",function($scope,$routeParams,Session,Tiers,WhiteLabel,Fonts){var companyId=$routeParams.companyId;$scope.fonts=Fonts,$scope.changeWhiteLabel=function(){var company={_id:companyId,colors:$scope.company.colors,font:$scope.company.font};Tiers.changeWhiteLabel(company,function(){WhiteLabel.setColors($scope.company.colors),WhiteLabel.setFonts($scope.company.font)})}}]),angular.module("ettoPupil").controller("HomeCtrl",["$scope","$location","CourseMetaChange","Users","Tier",function($scope,$location,CourseMetaChange,Users,Tier){$scope.$watch("user",function(){$scope.user&&$scope.listUsersCreatedCourses()}),TweenMax.from($("#head-img"),1,{delay:.6,opacity:0}),$scope.activetab="home",TweenMax.from($("#title"),.6,{delay:.3,opacity:0,y:20}),TweenMax.from($("#subtite"),.6,{delay:.6,opacity:0,y:20}),$scope.listUsersCreatedCourses=function(){Tier.listCompanyCreatedCourses($scope.user._tier._company,function(data){$scope.createdCourses=data}),$scope.user._tier&&Users.listUsersCourses($scope.user._id,function(courses){$scope.usersCourses=courses})},$scope.openCourse=function(course){$location.path("/course/view/"+course._id)}}]),angular.module("ettoPupil").controller("CourseDemoCtrl",["$scope","$compile","course","$location","$timeout",function($scope,$compile,course,$location,$timeout){$scope.course=course,$scope.isDemo=!0;var startLocation=$location.path();$scope.onTimeout=function(){startLocation===$location.path()&&$location.path("/store/"+$scope.user._tier._id),$timeout.cancel(demoTimeout)};var demoTimeout=$timeout($scope.onTimeout,12e4)}]),angular.module("ettoPupil").controller("CourseViewCtrl",["$scope","$compile","course","Record",function($scope,$compile,course,Record){$scope.course=course,$scope.lockedBlock=!1,$scope.$watch("user",function(){$scope.user&&Record.create(course._id,$scope.user._id,function(record){record.err&&($scope.err=record.err),$scope.record=record})})}]),angular.module("ettoPupil").controller("CourseEditCtrl",["$scope","course","CoursePlayer","$rootScope",function($scope,course,CoursePlayer,$rootScope){$scope.course=course,$scope.isEditing=!0,$scope.statuses=["live","testing","private"];var socket=io($rootScope.config.socketUrl);socket.on("course updated: "+$scope.course._id,function(data){$scope.$apply(function(){$scope.course.blocks=data.blocks,$scope.course.title=data.title,$scope.course.subtitle=data.subtitle,$scope.course.status=data.status,$scope.course.thumb=data.thumb,$scope.course.meta=data.meta;var newCurrentBlock=Number(CoursePlayer.currentBlock());data.eventType&&data.blockChanged<=CoursePlayer.currentBlock()&&CoursePlayer.currentBlock()>=1&&(newCurrentBlock=Number(CoursePlayer.currentBlock())+data.eventType),69===data.eventType&&(data.blockChanged===Number(CoursePlayer.currentBlock())-1&&(newCurrentBlock=Number(CoursePlayer.currentBlock())-1),data.blockChanged===Number(CoursePlayer.currentBlock())&&(newCurrentBlock=Number(CoursePlayer.currentBlock())+1)),CoursePlayer.play($scope.course,newCurrentBlock),$scope.course.$update()})}),$scope.$on("course-save",function(){var emmitedCourse=$scope.course;emmitedCourse.eventType=CoursePlayer.eventType(),emmitedCourse.blockChanged=CoursePlayer.currentBlock(),console.log(CoursePlayer.currentBlock()),socket.emit("updated course",emmitedCourse),$scope.course.$update(),CoursePlayer.lastEvent(0),angular.element(".etto-toolbox-blocktools").empty()})}]),angular.module("ettoPupil").controller("ReportsCtrl",["$scope","Tier","Tiers","$routeParams","$location","Users","Record",function($scope,Tier,Tiers,$routeParams,$location,Users,Record){$scope.viewChildren=function(link){$location.path(link)},$scope.parentID=$routeParams.parentID,$scope.activetab="people","0"===$scope.parentID&&($scope.parentID=null),$scope.showCourseReportToggle=function(){$scope.showCourseReport=!$scope.showCourseReport},$scope.listUsers=function(){Users.listUsersInTier($scope.parentID,function(users){$scope.users=users,$scope.users&&$scope.users[0]&&async.map($scope.users,function(user){Record.userOverallProgress(user._id,user._tier,function(result){user.overallPercent=Number(result.overallPercent)})})})},$scope.reset=function(){$scope.children=[],Tiers.findTier($scope.parentID,function(results){$scope.currentTier=results,results._children&&results._children[0]?async.map(results._children,function(tierId){Tiers.tierReport(tierId,function(results){$scope.children.push(results)})}):$scope.showCourseReport=!0}),Tiers.tierReport($scope.parentID,function(results){$scope.tierReport=results})},$scope.add=function(newTier){newTier={title:newTier.title,parent:$scope.parentID},Tiers.addTier(newTier,function(){$scope.reset(),$scope.listUsers(),$scope.newTier.title=""})},$scope.remove=function(tierID){var tier={_id:tierID,parent:$scope.parentID};Tiers.removeTier(tier,function(){$scope.reset()})},$scope.reset(),$scope.listUsers()}]),angular.module("ettoPupil").controller("StoreCtrl",["$scope","$http","Session","Store","CourseList","Tiers","$timeout","$routeParams",function($scope,$http,Session,Store,CourseList,Tiers,$timeout,$routeParams){var totUsers=0;$scope.onTiers=[],$scope.parentID=$routeParams.tierID,$scope.activetab="market",TweenMax.from($("#head-img"),1,{delay:.3,opacity:0}),$scope.listCourses=function(){CourseList.storeCourses(function(data){$scope.courses=data})},$scope.listCourses(),$scope.$watch("user",function(){if($scope.user){Tiers.findTier($scope.parentID,function(results){$scope.currentTier=results});var obj={_id:$scope.user._tier._id};Tiers.listChildrenAndCountUsers(obj,function(tiers){$scope.data={children:tiers};for(var i=0;i<tiers.length;i++)totUsers+=tiers[i].totUsers,tiers[i].dynamicTotalUsers=tiers[i].totUsers;$scope.totUsers=totUsers,setPrice()})}}),$scope.toggleMinimized=function(child){if(void 0===child.minimized){var obj={_id:child._id};Tiers.listChildrenAndCountUsers(obj,function(tiers){child.children=tiers;for(var i=0;i<tiers.length;i++)tiers[i].isoff=child.isoff,tiers[i].dynamicTotalUsers=tiers[i].totUsers;child.minimized=!1})}else child.minimized=!child.minimized},$scope.toggleIsOn=function(child){child.isoff=void 0===child.isoff?!0:!child.isoff;var numToChange=countChildrenUsers(child),changeTotal=0;child.isoff?child.dynamicTotalUsers-=numToChange:(child.dynamicTotalUsers=child.totUsers,child.totUsers+=numToChange),changeTotal=child.dynamicTotalUsers+countChildrenUsers(child),$scope.changeChildren(child),$scope.checkIfParentsAreOff(child,function(totalOff){0!==totalOff&&(changeTotal=totalOff+child.totUsers),$scope.changeParent(child,changeTotal,function(){$scope.totUsers=countChildrenUsers($scope.data),setPrice()})})},$scope.checkIfParentsAreOff=function(intChild,callback){function recursive(tiers,child){if(tiers.children&&tiers.children[0])for(var j=0;j<tiers.children.length;j++)tiers.children[j]._id===child.parent?(tiers.children[j].isoff===!0&&(totToChange+=tiers.children[j].dynamicTotalUsers),tiers.children[j].parent===$scope.currentTier._id?callback(totToChange):recursive($scope.data,tiers.children[j])):recursive(tiers.children[j],child)}var totToChange=0;intChild.parent===$scope.currentTier._id?callback(totToChange):recursive($scope.data,intChild)},$scope.changeChildren=function(intChild){function recursive(tier){if(tier.children&&tier.children[0])for(var j=0;j<tier.children.length;j++)tier.children[j].isoff=intChild.isoff,tier.children[j].isoff===!0?tier.children[j].dynamicTotalUsers-=countChildrenUsers(tier.children[j]):tier.children[j].dynamicTotalUsers=tier.children[j].totUsers,tier.children[j].children&&recursive(tier.children[j])}recursive(intChild)};var countChildrenUsers=function(tier){for(var numUsers=0,j=0;j<tier.children.length;j++)tier.children[j].isoff||(numUsers+=tier.children[j].dynamicTotalUsers);return numUsers};$scope.changeParent=function(intChild,changeTotal,callback){function recursive(tiers,child){if(tiers.children&&tiers.children[0])for(var j=0;j<tiers.children.length;j++)tiers.children[j]._id===child.parent?(intChild.isoff===!1&&tiers.children[j].isoff===!0?(tiers.children[j].isoff=!1,tiers.children[j].dynamicTotalUsers=tiers.children[j].dynamicTotalUsers+countChildrenUsers(tiers.children[j]),totToChange=tiers.children[j].dynamicTotalUsers+totToChange):intChild.isoff?tiers.children[j].dynamicTotalUsers-=changeTotal:tiers.children[j].dynamicTotalUsers+=changeTotal,tiers.children[j].parent===$scope.currentTier._id?callback(totToChange):recursive($scope.data,tiers.children[j])):recursive(tiers.children[j],child)}var totToChange=intChild.totUsers;intChild.parent===$scope.currentTier._id?callback(intChild.dynamicTotalUsers):recursive($scope.data,intChild)},$scope.listAllOnTiers=function(){function recursiveFindOnTiers(tier){tier.children[0]&&async.map(tier.children,function(child,callback){if(!child.isoff){var hasChildren=!1,hasAddedChildren=!1;child._children&&child._children[0]&&(hasChildren=!0),child.children&&child.children[0]&&(hasAddedChildren=!0);var isMinimized=child.minimized;void 0===isMinimized&&(isMinimized=!0),$scope.onTiers.push({hasChildren:hasChildren,hasAddedChildren:hasAddedChildren,minimized:isMinimized,_id:child._id}),recursiveFindOnTiers(child)}callback(null,null)},function(){})}$scope.onTiers=[{hasChildren:!0,hasAddedChildren:!0,minimized:!0,_id:$scope.parentID}],recursiveFindOnTiers($scope.data)};var setPrice=function(){_.map($scope.courses,function(course){course.priceWithEmps=(course.price*$scope.totUsers).toFixed(2)})}}]),angular.module("ettoPupil").controller("LogoutCtrl",["$scope","$location","$http","Session",function($scope,$location,$http,Session){var handleSuccess=function(){$location.path("/")};Session.destroySession().success(handleSuccess)}]),angular.module("ettoPupil").controller("InviteCtrl",["$scope","$location","Session","$routeParams","Users","Tier","WhiteLabel",function($scope,$location,Session,$routeParams,Users,Tier,WhiteLabel){$scope.newUser={},Users.inviteDetails($routeParams.id,function(user){$scope.newUser=user,getCompnay()});var getCompnay=function(){Tier.getCompany($scope.newUser._tier,function(results){$scope.company=results,WhiteLabel.setColors($scope.company.colors),WhiteLabel.setFonts($scope.company.font)})};$scope.confirmUser=function(){Users.updateUsersTier($scope.newUser,function(data){data.err?$scope.err=data.err:$location.path("/etto")})}}]),angular.module("ettoPupil").controller("SettingsCtrl",["$scope","Tiers","$routeParams","Users","Store","Session",function($scope,Tiers,$routeParams,Users,Store,Session){var id=$routeParams.userID;$scope.addEmail=function(){$scope.editUser.emails.push(null)},$scope.removeEmail=function(index){index>-1&&$scope.editUser.emails.length>1&&$scope.editUser.emails.splice(index,1),$scope.updateUser()},Users.fullDetails(id,function(user){$scope.editUser=user,Store.findCredit(user._tier._company,function(credit){$scope.credit=credit})}),Users.listUserCoursesRecords(id,function(records){$scope.userRecords=records}),$scope.updateUser=function(){$scope.saved=null,$scope.editUser.emails=$scope.editUser.emails.filter(function(e){return e}),Users.update($scope.editUser,function(data){data.err?$scope.err=data.err:($scope.saved="true",$scope.updateSessionSettings($scope.user._id,$scope.editUser._id))})},$scope.updateUserTier=function(id,title){$scope.saved=null,$scope.editUser._tier._id=id,Users.update($scope.editUser,function(){$scope.editUser._tier.title=title,$scope.saved="true",$scope.updateSessionSettings($scope.user._id,$scope.editUser._id)})},$scope.updateSessionSettings=function(userId,editUserId){userId===editUserId&&Session.updateSession($scope.user,function(data){$scope.user=data})},$scope.updateAvatar=function(){$scope.showAssetLibrary(200,200,function(asset){$scope.editUser.avatarUrl=asset.url,$scope.updateUser()})}}]),angular.module("ettoPupil").controller("TierCtrl",["$scope","Tiers","$routeParams","CourseList","Users",function($scope,Tiers,$routeParams,CourseList,Users){$scope.tierID=$routeParams.id,$scope.reset=function(){Tiers.findTier($scope.tierID,function(results){$scope.tier=results,CourseList.listCompanyCourses(results._company,function(courses){async.map(courses,function(course,callback){course.ison=!1,callback()},function(){$scope.companyCourses=courses})})}),Tiers.tierReport($scope.tierID,function(results){$scope.tierReport=results}),Users.listUsersInTier($scope.tierID,function(users){$scope.users=users})},$scope.updateTier=function(){Tiers.updateTier($scope.tier,function(results){$scope.tier=results})},$scope.addCourseToTier=function(course){Tiers.addCourseToTier($scope.tierID,course._id,course.ison,function(){$scope.tierReport=[],$scope.reset()})},$scope.removeCourse=function(courseId){Tiers.removeCourseFromTiers($scope.tierID,courseId,function(){$scope.tierReport=[],$scope.reset()})},$scope.reset()}]),angular.module("ettoPupil").controller("PaymentsCtrl",["$scope","$routeParams","Users","Store","Payment",function($scope,$routeParams,Users,Store,Payment){var id=$routeParams.userID;Users.fullDetails(id,function(user){Store.payments(user._tier._company,function(results){$scope.credit=results}),Payment.companyPurchases(user._tier._company,function(results){$scope.purchases=results}),Payment.companyCreditsUsed(user._tier._company,function(results){$scope.usedCredit=results}),Payment.companyRecieved(user._tier._company,function(results){$scope.payments=results})})}]),angular.module("ettoPupil").controller("SubscriptionCtrl",["$scope","$routeParams","Users","$resource","Payment","Tier",function($scope,$routeParams,Users,$resource,Payment,Tier){$scope.currentSubscription=0,$scope.show=function(id){$scope.onSubscription=id},$scope.cancelSubscription=function(){Payment.cancelSubscription($scope.user._tier._company,function(){$scope.currentSubscription=null,$scope.resetSubscription()})},$scope.resetSubscription=function(){async.parallel([function(callback){Payment.subscriptions(function(results){$scope.subscriptionTypes=results,$scope.onSubscription=$scope.subscriptionTypes[0]._id,callback(null,results)})},function(callback){Users.fullDetails($routeParams.userID,function(user){Tier.findTier(user._tier._company,function(results){$scope.currentSubscription=results._subscription,callback(null)})})}],function(err,results){async.map(results[0],function(subscriptionType){$scope.currentSubscription===subscriptionType._id&&($scope.onSubscription=subscriptionType._id)})})},$scope.resetSubscription()}]),angular.module("ettoPupil").controller("AssetLibrary",["$scope","$compile","assets",function($scope,$compile,assets){$scope.assets=assets,$scope.deleteAsset=function(index){$scope.assets[index].$delete(),$scope.assets.splice(index,1)},$scope.isImage=function(url){return null!==url.match(/\.(jpeg|jpg|gif|png)$/)},$scope.fileName=function(url){return url.substring(url.lastIndexOf("/")+1)}}]),angular.module("ettoPupil").controller("LoginPageCtrl",["$scope","$routeParams","$location","Session","Tiers","WhiteLabel",function($scope,$routeParams,$location,Session,Tiers,WhiteLabel){var companyId="",redirUrl="/etto",findCompany=function(){Tiers.findTier(companyId,function(company){$scope.company=company,WhiteLabel.setColors($scope.company.colors),WhiteLabel.setFonts($scope.company.font)})};$routeParams.companyId?(companyId=$routeParams.companyId,findCompany()):$routeParams.redirUrl&&(redirUrl=$routeParams.redirUrl),$scope.login=function(){var user=$scope.user;Session.authenticate(user,function(data){data.message?$scope.err=data:$location.path(redirUrl)})}}]),angular.module("ettoPupil").controller("TermsCtrl",["$scope","$compile","Session",function(){}]),angular.module("ettoPupil").directive("ettoFooter",[function(){return{templateUrl:"/views/directives/ettoFooter.html",restrict:"AE"}}]),angular.module("ettoPupil").directive("ettoLoginModal",[function(){return{restrict:"AE",controller:["$scope","$modal","Session","$location","$route","Security",function($scope,$modal,Session,$location,$route){$scope.login=function(){var modal=$modal.open({templateUrl:"/views/directives/ettoLoginModal.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.user={},$scope.cancel=function(){$modalInstance.close()},$scope.handleLogin=function(user){Session.authenticate(user,function(data){data.message?$scope.err=data:$modalInstance.close(user)})}}]});modal.result.then(function(user){var redir="/etto";user&&($location.path()===redir?$route.reload():$location.path(redir))})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoCertificate",[function(){return{templateUrl:"/views/directives/ettoCertificate.html",restrict:"AE"}}]),angular.module("ettoPupil").directive("ettoCourse",["CoursePlayer","Record",function(CoursePlayer,Record){return{templateUrl:"/views/directives/ettoCourse.html",restrict:"E",controller:["$scope","$document","$attrs",function($scope,$document,$attrs){$scope.editing=void 0!==$attrs.edit,$scope.onLastBlock=!1,$scope.blocktypes=[{name:"title",humanized:"Title"},{name:"three-up",humanized:"Three Up"},{name:"quote",humanized:"Quote"},{name:"video",humanized:"Video"},{name:"image",humanized:"Image"},{name:"quiz",humanized:"Quiz"},{name:"three-images",humanized:"Images"},{name:"four-images",humanized:"Images"},{name:"define",humanized:"Define"},{name:"download",humanized:"Download"},{name:"map",humanized:"Map"}],$scope.newBlocktype=$scope.blocktypes[0],CoursePlayer.play($scope.course,0),$scope.editing||$scope.course.blocks.push({type:"finished",data:{title:"all done"}}),$scope.currentBlock=function(){return CoursePlayer.currentBlock()},$scope.blocksInCourse=function(){return CoursePlayer.blocksInCourse()},$scope.addBlock=function(blocktype){var newBlockId=CoursePlayer.addBlock(blocktype,CoursePlayer.currentBlock()+1);CoursePlayer.switchToBlock(newBlockId)},$scope.removeBlock=function(){CoursePlayer.removeBlock(CoursePlayer.currentBlock()),0!==CoursePlayer.currentBlock()&&CoursePlayer.switchToBlock(CoursePlayer.currentBlock()-1),$scope.saveCourse()},$scope.swapBlocks=function(a,b){var returnObj=CoursePlayer.swapBlocks(a,b);return $scope.saveCourse(),returnObj},$scope.saveCourse=function(){$scope.$emit("course-save")},$scope.isCurrentBlock=function(block){return CoursePlayer.isCurrentBlock(block)},$scope.lock=function(){CoursePlayer.lock()},$scope.unlock=function(){CoursePlayer.unlock()},$scope.checkLocked=function(){return CoursePlayer.isLocked()},$scope.nextBlock=function(){if($scope.editing)CoursePlayer.currentBlock()===CoursePlayer.blocksInCourse()-1?$scope.showOptions():($scope.onLastBlock=!1,CoursePlayer.nextBlock(),$scope.scrollTop()),$scope.onLastBlock=CoursePlayer.onLastBlock();else if($scope.isDemo)CoursePlayer.nextBlock(),$scope.scrollTop();else if(CoursePlayer.isLocked()===!1){$scope.locked=!1,CoursePlayer.nextBlock();var currBlock=Number(CoursePlayer.currentBlock())+1;Record.updateBookmark($scope.record._id,currBlock,CoursePlayer.blocksInCourse()),$scope.scrollTop()}},$scope.prevBlock=function(){CoursePlayer.isLocked()===!1&&(CoursePlayer.prevBlock(),$scope.scrollTop(),$scope.onLastBlock=CoursePlayer.onLastBlock())},$scope.scrollTop=function(){$("html,body").scrollTop(0)},$document.keydown(function(e){var KEY_RIGHT=39,KEY_LEFT=37,key=e.keyCode;$scope.editing||(key===KEY_RIGHT?$scope.nextBlock():key===KEY_LEFT&&$scope.prevBlock(),$scope.$apply())})}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoBlock",["$compile","BlockType","CoursePlayer",function($compile,BlockType,CoursePlayer){return{template:"<ng-include src='blockTemplate'></ng-include>",restrict:"E",controller:["$scope","$element","$attrs",function($scope){$scope.isCurrentBlock=function(block){return CoursePlayer.isCurrentBlock(block)},$scope.saveCourse=function(){$scope.$emit("course-save")}}],link:function($scope){var editTemplate=null,editEl=null,pathBase="/views/blocks/"+$.camelCase("etto-block-"+$scope.block.type);$scope.blockTemplate=pathBase+".html",$scope.blockTemplateEdit=pathBase+"Edit.html",$scope.$parent.editing&&($scope.blockTemplate=pathBase+"Edit.html",editTemplate="<div class='etto-course-block-edit-container' ng-if='isCurrentBlock( $index )'></div>",editEl=$compile(editTemplate)($scope),angular.element(".etto-toolbox-blocktools").append(editEl))}}}]),angular.module("ettoPupil").directive("ettoYoutube",["$sce",function($sce){return{restrict:"E",scope:{code:"@"},template:"<div class='video-container'><iframe width='100%' height='100%' src='{{ ytUrl }}' frameborder='0' allowfullscreen></iframe></div>",link:function(scope){var code=scope.code;if("http"===code.substring(0,4)){var parts=code.split("v=",2);code=parts[1]}scope.ytUrl=$sce.trustAsResourceUrl("//www.youtube.com/embed/"+code)}}}]),angular.module("ettoPupil").directive("ettoVimeo",["$sce",function($sce){return{restrict:"E",scope:{vimeo:"@"},template:"<div class='video-container'><iframe width='100%' height='100%' src='{{ vimeoUrl }}' frameborder='0' allowfullscreen></iframe></div>",link:function(scope){var code=scope.vimeo;if("http"===code.substring(0,4)){var parts=code.split(".com/",2);code=parts[1]}scope.vimeoUrl=$sce.trustAsResourceUrl("//player.vimeo.com/video/"+code)}}}]),angular.module("ettoPupil").directive("ettoImage",[function(){return{restrict:"AE",controller:["$scope",function($scope){$scope.updateThumb=function(){$scope.showAssetLibrary(390,200,function(asset){$scope.course.thumb=asset.url,$scope.saveCourse()})},$scope.updateBlockImage=function(block,name,w,h){$scope.showAssetLibrary(w,h,function(asset){block.data[name]=asset.url,$scope.saveCourse()})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoNotLoggedInNav",[function(){return{templateUrl:"/views/directives/ettoNotLoggedInNav.html",restrict:"E",link:function(){}}}]),angular.module("ettoPupil").directive("ettoLoggedInNav",[function(){return{templateUrl:"/views/directives/ettoLoggedInNav.html",restrict:"E",link:function(){}}}]),angular.module("ettoPupil").directive("ettoNewBrand",[function(){return{restrict:"E",templateUrl:"/views/directives/ettoNewBrand.html",link:function(scope,element){TweenMax.from(element,1,{scaleY:0,opacity:0})}}}]),angular.module("ettoPupil").directive("moveSide",[function(){return{restrict:"EA",link:function(scope,element){element.bind("mouseover",function(){TweenMax.to(element,.3,{x:-10})}),element.bind("mouseout",function(){TweenMax.to(element,.3,{x:0})})}}}]).directive("sinkIn",[function(){return{restrict:"EA",link:function(scope,element){var tranTime=.2;element.bind("mouseover",function(){TweenMax.to(element,tranTime,{scaleX:.95,scaleY:.95})}),element.bind("mouseout",function(){TweenMax.to(element,tranTime,{scaleX:1,scaleY:1})})}}}]),angular.module("ettoPupil").directive("ettoAddCourse",[function(){return{restrict:"AE",controller:["$scope","$modal","CourseMetaChange","$location",function($scope,$modal,CourseMetaChange,$location){$scope.addCourse=function(){var user=$scope.user,modal=$modal.open({templateUrl:"/views/directives/ettoAddCourseModal.html",controller:["$scope","$modalInstance","Payment","$location",function($scope,$modalInstance,Payment,$location){$scope.user=user,Payment.checkCanAddCourse(user._tier._company,function(result){$scope.subscriptionGood=result.isGood}),$scope.course={},$scope.createCourse=function(){$modalInstance.close($scope.course)},$scope.linkSubscription=function(){$modalInstance.close(),$location.path("/subscription/"+user._id)}}]});modal.result.then(function(course){course._creator=$scope.user._tier._company,CourseMetaChange.create(course,function(data){$location.path("/course/edit/"+data._id)})})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoSession",["Store","$location",function(Store,$location){return{restrict:"EA",controller:["$scope","Session","Tier","WhiteLabel",function($scope,Session,Tier,WhiteLabel){$scope.$on("401",function(){$scope.login()}),$scope.destroySession=function(redir){Session.destroySession(function(){$location.path(redir)})},$scope.updateSession=function(){Session.getSession(function(data){$scope.user=data,$scope.user.isBeta?$scope.user&&(Store.findCredit($scope.user._tier._company,function(results){$scope.credits=results.credits}),Tier.findTier($scope.user._tier._company,function(company){$scope.company=company,company.colors&&(WhiteLabel.setColors(company.colors),WhiteLabel.setFonts(company.font))})):$scope.destroySession("/beta")})},$scope.updateSession()}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoVerifyModal",["Tiers","Users","Session",function(){return{restrict:"AE",controller:["$scope","$modal","Tiers","$location","Users","Session",function($scope,$modal,Tiers,$location,Users,Session){var user=null;$scope.$watch("user",function(){$scope.user&&$scope.user.isBeta&&!$scope.user._tier&&(user=$scope.user,$scope.register())}),$scope.register=function(){var modal=$modal.open({templateUrl:"/views/directives/ettoVerifyModal.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.user=user,$scope.handleLogin=function(user){var newTier={title:user.tier.title};Tiers.createCompany(newTier,function(tier){user._tier=tier._id,Users.updateUsersTier(user,function(data){data.err?$scope.err=data.err:$modalInstance.close(data)})})}}]});modal.result.then(function(user){Session.updateSession(user,function(data){$scope.user=data,$location.path($scope.redirectTo)})})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoRegisterModal",["Tiers","Users","Session",function(){return{restrict:"AE",controller:["$scope","$modal","Tiers","$location","Users","Session",function($scope,$modal,Tiers,$location,Users,Session){$scope.register=function(){var modal=$modal.open({templateUrl:"/views/directives/ettoRegister.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.cancel=function(){$modalInstance.close()},$scope.handleLogin=function(newUser){newUser.tierTitle&&newUser.name&&newUser.emails&&newUser.username&&newUser.password?($scope.newUser=newUser,crateCompany()):$scope.err="Please fill out all of the information"};var crateCompany=function(){var newTier={title:$scope.newUser.tierTitle};Tiers.createCompany(newTier,function(tier){createUser(tier)})},createUser=function(tier){$scope.newUser._tier=tier._id,$scope.newUser.code="ettoCourse",Users.saveNewUser($scope.newUser,function(data){data.err?$scope.err=data.err:$modalInstance.close(data)})}}]});modal.result.then(function(user){user&&Session.updateSession(user,function(data){$scope.user=data,$location.path("/etto")})})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoTree",function(){return{restrict:"A",transclude:"element",priority:1e3,terminal:!0,compile:function(tElement,tAttrs,transclude){var repeatExpr,childExpr,rootExpr,childrenExpr,branchExpr;return repeatExpr=tAttrs.ettoTree.match(/^(.*) in ((?:.*\.)?(.*)) at (.*)$/),childExpr=repeatExpr[1],rootExpr=repeatExpr[2],childrenExpr=repeatExpr[3],branchExpr=repeatExpr[4],function(scope,element){function lookup(child){for(var i=cache.length;i--;)if(cache[i].scope[childExpr]===child)return cache.splice(i,1)[0]}var rootElement=element[0].parentNode,cache=[];scope.$watch(rootExpr,function(root){var currentCache=[];!function walk(children,parentNode,parentScope,depth){if(children&&children[0]){var cursor,child,cached,childScope,grandchildren,i=0,n=children.length,last=n-1,outerLoop=function(clone,childScope){childScope[childExpr]=child,cached={scope:childScope,parentScope:parentScope,element:clone[0],branch:clone.find(branchExpr)[0]},parentNode.insertBefore(cached.element,cursor)};for(i=0;n>i;i++)cursor=parentNode.childNodes[i],child=children[i],cached=lookup(child),cached&&cached.parentScope!==parentScope&&(cache.push(cached),cached=null),cached?cached.element!==cursor&&parentNode.insertBefore(cached.element,cursor):transclude(parentScope.$new(),outerLoop),childScope=cached.scope,childScope.$depth=depth,childScope.$index=i,childScope.$first=0===i,childScope.$last=i===last,childScope.$middle=!(childScope.$first||childScope.$last),currentCache.push(cached),grandchildren=child[childrenExpr],grandchildren&&grandchildren.length&&walk(grandchildren,cached.branch,childScope,depth+1)}}(root,rootElement,scope,0);for(var i=cache.length,cached=[];i--;)cached=cache[i],cached.scope&&cached.scope.$destroy(),cached.element&&cached.element.parentNode.removeChild(cached.element);cache=currentCache},!0)}}}}),angular.module("ettoPupil").directive("ettoInviteUserModal",["Users",function(){return{restrict:"AE",controller:["$scope","$modal","Users",function($scope,$modal,Users){var _tier=$scope.parentID;
$scope.inviteUser=function(){var user=$scope.user,modal=$modal.open({templateUrl:"/views/directives/ettoInviteUserModal.html",controller:["$scope","$modalInstance","Invite",function($scope,$modalInstance,Invite){$scope.newUser=Invite.defaultUser,$scope.newUser.emails=[""],$scope.user=user,$scope.addEmail=function(){$scope.newUser.emails.unshift("")},$scope.cancel=function(){$modalInstance.close()},$scope.inviteUser=function(newUser){newUser._tier=_tier,Users.inviteUser(newUser,function(data){data.rejected&&data.rejected[0]?$scope.err="The following emails were rejected: "+data.rejected:$modalInstance.close()})}}]});modal.result.then(function(){$scope.listUsers()})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoPurchase",[function(){return{restrict:"AE",controller:["$scope","$modal","Store","Tiers",function($scope,$modal,Store,Tiers){$scope.distributeCourseToTiers=function(course){var obj={courseId:course._id,tiers:$scope.onTiers};Tiers.distributeCourseToTiers(obj,function(){course.added=!0})},$scope.addToLibrary=function(course){$scope.listAllOnTiers(),$scope.credits<=course.priceWithEmps&&0!==course.price?$scope.purchase(course,null):$scope.distributeCourseToTiers(course)},$scope.purchase=function(course,subscription){course&&$scope.listAllOnTiers();var user=$scope.user,onTiers=$scope.onTiers;Store.findCards($scope.user._tier._company,function(customer){"204"===customer&&(customer=null);var modal=$modal.open({templateUrl:"/views/directives/ettoPurchaseModal.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){course?($scope.addedCredits=course.priceWithEmps,$scope.selCourse=course):subscription&&($scope.addedCredits=subscription.price,$scope.subscription=subscription),$scope.customer=customer,$scope.user=user,$scope.handleCancil=function(){$modalInstance.close()},$scope.handlePurchase=function(card,addedCredits){var courseId=null;course&&(courseId=course._id);var order={user:user,card:card,tiers:onTiers,courseId:courseId,subscription:subscription,addedCredits:addedCredits};Store.purchase(order,function(responce){responce.message?$scope.err=responce.message:$modalInstance.close(order)})}}]});modal.result.then(function(order){order.subscription&&$scope.resetSubscription(),course&&$scope.distributeCourseToTiers(course),$scope.updateSession()})})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoSettingsNav",["Session",function(){return{restrict:"EA",templateUrl:"/views/directives/ettoSettingsNav.html",link:function(scope,element,attrs){$("#"+attrs.active).addClass("active")}}}]),angular.module("ettoPupil").directive("ettoAddTier",[function(){return{restrict:"AE",controller:["$scope","$modal","Tiers",function($scope,$modal,Tiers){$scope.addTier=function(){var parentId=$scope.parentID,modal=$modal.open({templateUrl:"/views/directives/ettoAddTierModal.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.handleNewTier=function(tier){tier.parent=parentId,$modalInstance.close(tier)}}]});modal.result.then(function(tier){Tiers.addTier(tier,function(){$scope.reset(),$scope.listUsers()})})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoAddCredits",[function(){return{template:"<a class='btn btn-primary btn-sm top-logout-btn' href='#' ng-click='addCredits()'><i class='fa fa-plus-square-o'></i> Add Credits {{credit.credits}}</a>",restrict:"AE",controller:["$scope","$modal","CourseMetaChange",function($scope,$modal,CourseMetaChange){$scope.addCredits=function(){var credit=$scope.credit,modal=($scope.user._tier._company,$modal.open({templateUrl:"/views/directives/ettoAddCreditsModal.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.newCredits=Number(credit.credits),$scope.credit=credit,$scope.handleCedits=function(){$modalInstance.close($scope.course)}}]}));modal.result.then(function(course){course._creators=[$scope.user._id],CourseMetaChange.create(course,function(data){data&&$scope.listUsersCreatedCourses()})})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoDeleteCard",["$resource",function($resource){return{restrict:"AE",controller:["$scope","$modal","Store","Endpoint",function($scope,$modal,Store,Endpoint){$scope.deleteCard=function(companyId,cardId){var Card=$resource(Endpoint("store","deleteCard")+"/:companyId",{companyId:companyId,cardId:cardId});Card.get({companyId:companyId,cardId:cardId},function(){$scope.success="Deleted",$scope.customer.cards.data=[]})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoRecipientModal",[function(){return{restrict:"AE",controller:["$scope","$modal","Store","$location","Tier",function($scope,$modal,Store,$location,Tier){$scope.addRecipient=function(){Tier.findTier($scope.user._tier._company,function(company){$modal.open({templateUrl:"/views/directives/ettoRecipientModal.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.recipient={},company.recipientId?$scope.recipient.id=company.recipientId:$scope.recipient.type="corporation",$scope.typeOptions=[{value:"individual",title:"Individual"},{value:"corporation",title:"Corporation"}],$scope.handleCancil=function(){$modalInstance.close()},$scope.createRecipient=function(){$scope.err=$scope.recipient,$scope.recipient.type=$scope.recipient.type.value,$scope.recipient.bank_account.country="US",Store.createRecipient($scope.recipient,function(results){$scope.err=results})}}]})})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoAssetLibraryModal",[function(){return{restrict:"AE",controller:["$scope","$modal","$rootScope","$http","$upload","$q",function($scope,$modal,$rootScope,$http,$upload){$scope.showAssetLibrary=function(w,h,done){var modal=$modal.open({templateUrl:"/views/directives/ettoAssetLibraryModal.html",windowClass:"app-modal-large",controller:["$scope","$modalInstance","Asset",function($scope,$modalInstance,Asset){$scope.assets=Asset.query({}),$scope.suggestedWidth=w,$scope.suggestedHeight=h,$scope.selectAsset=function(id){$scope.assets.forEach(function(asset){asset._id===id&&$modalInstance.close(asset)})},$scope.deleteAsset=function(index){$scope.assets[index].$delete(),$scope.assets.splice(index,1)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.isImage=function(url){return null!==url.match(/\.(jpeg|jpg|gif|png)$/)},$scope.fileName=function(url){return url.substring(url.lastIndexOf("/")+1)},$scope.uploadData=[],$scope.onFileSelect=function($files){$scope.files=$files,$scope.upload=[],$files.forEach(function(file,i){var asset=new Asset;asset.getS3Policy(file,function(){$scope.upload[i]=$upload.upload({url:"https://"+$rootScope.config.aws.bucket+".s3.amazonaws.com/",method:"POST",data:{key:asset.s3.key,acl:"public-read","Content-Type":file.type,AWSAccessKeyId:asset.s3.AWSAccessKeyId,success_action_status:"201",Policy:asset.s3.s3Policy,Signature:asset.s3.s3Signature},file:file}).then(function(response){if(file.progress=100,201===response.status){var data=$((new DOMParser).parseFromString(response.data,"text/xml")),parsedData={bucket:data.find("Bucket").text(),key:data.find("Key").text(),etag:data.find("ETag").text().replace(/^\"|\"$/g,"")};asset.url=data.find("Location").text(),asset.s3=parsedData,asset.$save(),$scope.assets.unshift(asset)}else $scope.err={message:"Upload Failed"}},null,function(evt){file.progress=parseInt(100*evt.loaded/evt.total,10)})})})}}]});modal.result.then(function(asset){done(asset)})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoSearchUser",[function(){return{restrict:"EA",controller:["$scope","Users",function($scope,Users){$scope.searchUser=function(){Users.searchUser($scope.userSearch,function(results){$scope.foundUsers=results})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoSearchTiers",[function(){return{restrict:"EA",controller:["$scope","Tier",function($scope,Tier){$scope.searchTiers=function(){""!==$scope.tierSearch&&Tier.searchTiers($scope.tierSearch,function(results){$scope.foundTiers=results})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoRemoveCourse",[function(){return{restrict:"AE",controller:["$scope","$modal","CourseMetaChange",function($scope,$modal,CourseMetaChange){$scope.removeCourse=function(id,title){var modal=$modal.open({templateUrl:"/views/directives/ettoRemoveCourseModal.html",controller:["$scope","$modalInstance","Payment","$location",function($scope,$modalInstance){$scope.courseTitle=title,$scope.isSureRemove=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.close(!1)}}]});modal.result.then(function(didRemove){var course={id:id};didRemove&&CourseMetaChange.removeCourse(course,function(){$scope.listUsersCreatedCourses()})})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoOnBoarding",[function(){return{restrict:"EA",templateUrl:"/views/directives/ettoOnBoarding.html",link:function(){}}}]),angular.module("ettoPupil").directive("ettoRemoveTier",[function(){return{restrict:"AE",controller:["$scope","$modal","Tiers","$location",function($scope,$modal,Tiers){$scope.removeTier=function(tier){var modal=$modal.open({templateUrl:"/views/directives/ettoRemoveTierModal.html",controller:["$scope","$modalInstance","Payment",function($scope,$modalInstance){$scope.tier=tier,$scope.isSureRemove=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.close(!1)}}]});modal.result.then(function(didRemove){didRemove&&Tiers.removeTier(tier,function(){$scope.reset()})})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoUpdateCompany",[function(){return{restrict:"AE",controller:["$scope","Tiers",function($scope,Tiers){$scope.updateLeaderboard=function(){if($scope.user.auth.canEditCompany){var tier={_id:$scope.user._tier._company,leaderboard:$scope.company.leaderboard,logo:$scope.company.logo};Tiers.updateLeaderboard(tier,function(){})}},$scope.updateMainImg=function(){$scope.showAssetLibrary(400,200,function(asset){$scope.company.leaderboard.imgUrl=asset.url,$scope.updateLeaderboard()})},$scope.updateLogo=function(){$scope.showAssetLibrary(55,55,function(asset){$scope.company.logo=asset.url,$scope.updateLeaderboard()})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoResetPassword",[function(){return{restrict:"AE",controller:["$scope","$modal","Tiers","Security","$routeParams",function($scope,$modal,Tiers,Security,$routeParams){var verifyPasswordReset=function(){Security.verifyPasswordReset($routeParams.code,function(results){$scope.user=results,$scope.user.resetCode=$routeParams.code})};$scope.updatePassword=function(){$scope.user&&$scope.user.password?Security.updatePassword($scope.user,function(results){$scope.err={},results.message?$scope.err.message=results.message:($scope.err.message="Password has been reset",$scope.login())}):($scope.err={},$scope.err.message="Please enter a valid password")},verifyPasswordReset()}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoSendForgotPassword",[function(){return{restrict:"AE",template:"<div class='btn btn-default btn-sm' ng-click='ettoSendForgotPassword()'>Forgot Password</div>",controller:["$scope","Security",function($scope,Security){$scope.ettoSendForgotPassword=function(){$scope.user.username&&""!==$scope.user.username?Security.sendForgotPw($scope.user.username,function(results){$scope.err={},$scope.err.message=results.message?results.message:"Sent reset instructions to "+$scope.user.username}):($scope.err={},$scope.err.message="Please enter your email")}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoSyncBamboo",[function(){return{restrict:"AE",controller:["$scope","$modal","Tier","Tiers","Key",function($scope,$modal,Tier,Tiers,Key){$scope.keys={};var companyId;$scope.syncBambooHR=function(editKeys){async.waterfall([function(done){Tier.getCompany($scope.parentID,function(results){done(null,results)})}],function(err,company){companyId=company._id,Key.findBambooKey(company._id,function(err,results){err?$scope.editBambooKeys(null,$scope.keys):((results[0]||editKeys===!0)&&($scope.keys=results[0]),results[0]&&editKeys!==!0?$scope.refreshBamboo(results[0]):$scope.editBambooKeys(null,$scope.keys))})})},$scope.refreshBamboo=function(keys){Tiers.syncBambooHR(keys,function(err,results){err?$scope.editBambooKeys(err,keys):results.rejected?($scope.err=results.rejected,$scope.reset(),$scope.listUsers()):($scope.reset(),$scope.listUsers())})},$scope.editBambooKeys=function(err,keys){var modal=$modal.open({templateUrl:"/views/directives/ettoEditBambooKeys.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.keys=keys,$scope.err=err,$scope.saveBambooKey=function(keys){keys.bamboo&&keys.bamboo.apikey&&keys.bamboo.subdomain?(keys._company=companyId,Key.saveBambooKey(keys,function(){$modalInstance.close(keys)})):$scope.err="Please enter all information"}}]});modal.result.then(function(keys){$scope.refreshBamboo(keys)})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoCourseNav",[function(){return{templateUrl:"/views/course/ettoCourseNav.html",restrict:"EA",controller:["$scope","$attrs",function(){}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoChooseBlock",[function(){return{restrict:"AE",controller:["$scope","$modal",function($scope,$modal){$scope.showOptions=function(){var blocktypes=$scope.blocktypes,modal=$modal.open({templateUrl:"/views/blocks/ettoChooseBlock.html",windowClass:"app-modal-large",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.blocktypes=blocktypes,$scope.chose=function(blockName){$modalInstance.close(blockName)}}]});modal.result.then(function(blockName){console.log("blockName---",blockName),$scope.addBlock(blockName)})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoBlockQuiz",[function(){return{restrict:"EA",controller:["$scope","$document","$attrs","BlockQuiz","CoursePlayer",function($scope,$document,$attrs,BlockQuiz){var evaluations=[],scoreToPass=0;$scope.alphabet=BlockQuiz.alphabet,$scope.addAnswer=function(questions,index){questions[index].answers.push(BlockQuiz.getQuestion().answers[0])},$scope.addQuestion=function(questions){questions.push(BlockQuiz.getQuestion())},$scope.deleteAnswer=function(answers,index){BlockQuiz.deleteAnswer(answers,index)},$scope.deleteQuestion=function(questions,index){BlockQuiz.deleteQuestion(questions,index)},$scope.setUpEvalArr=function(questions){questions.passed&&questions.passed===!0||($scope.lock(),$scope.lockedBlock=!0,async.map(questions,function(){evaluations.push(!1)}))},$scope.scoreToPass=function(passable){scoreToPass=passable},$scope.checkAnswer=function(answers,answer,index){for(var i=0;i<answers.length;i++)answers[i].selected=answer===answers[i]?!0:!1;evaluations[index]=answer.correct},$scope.evaluate=function(questions){var passed=!0,index=0;async.mapSeries(evaluations,function(evaluate,done){evaluate===!1?(passed=!1,questions[index].incorrect=!0):questions[index].incorrect=!1,index++,done(null)},function(){passed===!1?($scope.err={},$scope.err.message="Looks like you have some incorrect or incomplete answers.",questions.passed=!1):($scope.err=null,questions.passed=!0,$scope.unlock(),$scope.nextBlock())})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoCourseStatus",[function(){return{restrict:"AE",controller:["$scope","$modal","CourseMetaChange",function($scope,$modal){$scope.changeStatus=function(){var course=$scope.course,modal=$modal.open({templateUrl:"/views/directives/ettoCourseStatusModal.html",controller:["$scope","$modalInstance","$location",function($scope,$modalInstance){$scope.course=course,$scope.saveSettings=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.close(!1)}}]});modal.result.then(function(didRemove){didRemove&&$scope.saveCourse()})}}],link:function(scope,element,attrs){scope.redirectTo=attrs.redirectTo}}}]),angular.module("ettoPupil").directive("ettoSound",[function(){return{templateUrl:"/views/course/ettoSound.html",restrict:"EA",controller:["$scope","$attrs",function($scope){SC.initialize({client_id:"ad9b59b912df13003f2d80c851163490"});var auto_play=!0;if($scope.editing&&$scope.editing===!0&&(auto_play=!1),$scope.block.data&&$scope.block.data.soundurl){var track_url=$scope.block.data.soundurl;SC.oEmbed(track_url,{auto_play:auto_play,maxheight:120,color:"fff334"},function(oEmbed){oEmbed.html&&$("#etto-blocksound").html(oEmbed.html)})}}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoSoundEdit",[function(){return{templateUrl:"/views/course/ettoSoundEdit.html",restrict:"EA",controller:["$scope","$attrs",function(){}],link:function(){}}}]),angular.module("ettoPupil").directive("ettoBlockMap",[function(){return{restrict:"EA",controller:["$scope","leafletBoundsHelpers",function($scope,leafletBoundsHelpers){var editedBlock,blockBounds,blockCenter,blockMarkers={};$scope.startMap=function(block){editedBlock=block,block.bounds?(blockBounds=block.bounds,blockCenter=block.center,block.markers?blockMarkers=block.markers:block.markers=blockMarkers):(blockBounds=[[45.84410779560204,-121.39068603515625],[44.879228141635245,-124.17022705078124]],blockCenter={lat:45.523452,lng:-122.676207,zoom:9});var bounds=leafletBoundsHelpers.createBoundsFromArray(blockBounds);angular.extend($scope,{center:blockCenter,bounds:bounds,defaults:{scrollWheelZoom:!1},events:{map:{enable:["zoomend","drag","click","mouseup"],logic:"emit"}},markers:blockMarkers})},$scope.addMarker=function(){$scope.markers.marker={lat:$scope.center.lat,lng:$scope.center.lng,focus:!0,draggable:!0}},$scope.$watch("details.geometry",function(){$scope.details&&($scope.center.lat=$scope.details.geometry.location.k,$scope.center.lng=$scope.details.geometry.location.B,$scope.addMarker())}),$scope.$watch("bounds",function(){editedBlock.bounds=[[$scope.bounds.northEast.lat,$scope.bounds.northEast.lng],[$scope.bounds.southWest.lat,$scope.bounds.southWest.lng]]});var firstTime=0;$scope.$watchCollection("markers.marker",function(){editedBlock.markers=$scope.markers,firstTime>=1&&$scope.saveCourse(),firstTime++}),$scope.$watch("center",function(){editedBlock.center=$scope.center})}],link:function(){}}}]),angular.module("ettoPupil").factory("WhiteLabel",[function(){var colors={},font="Lato",setColors=function(dbColors){colors=dbColors,this.giveColors()},setFonts=function(dbFont){font=dbFont,WebFont.load({google:{families:[dbFont]}}),$("<style> body, h1, h2, h3, h4, h5 { font-family: '"+font+"'} </style>").appendTo("head")},giveColors=function(){$("<style> .etto-color-primary { color: "+colors.primary+"; } </style>").appendTo("head"),$("<style> .etto-color-secondary { color: "+colors.secondary+"; } </style>").appendTo("head"),$("<style> .etto-color-accent { color: "+colors.accent+"; } </style>").appendTo("head"),$("<style> .etto-color-light { color: "+colors.light+"; } </style>").appendTo("head"),$("<style> .etto-color-dark { color: #000000; } </style>").appendTo("head"),$("<style> .etto-bgcolor-primary { background-color: "+colors.primary+"; } </style>").appendTo("head"),$("<style> .etto-bgcolor-secondary { background-color: "+colors.secondary+"; } </style>").appendTo("head"),$("<style> .etto-bgcolor-accent { background-color: "+colors.accent+"; } </style>").appendTo("head"),$("<style> .etto-bgcolor-light { background-color: "+colors.light+"; } </style>").appendTo("head"),$("<style> .etto-bgcolor-white { background-color: #ffffff; } </style>").appendTo("head"),$("<style> .etto-bgcolor-light-hover:hover { background-color: "+colors.light+"; cursor: pointer; } </style>").appendTo("head")},WhiteLabel={setColors:setColors,setFonts:setFonts,giveColors:giveColors};return WhiteLabel}]),angular.module("ettoPupil").factory("Key",["$http","Endpoint",function($http,Endpoint){return{saveBambooKey:function(bambooKey,done){$http.post(Endpoint("key","saveBambooKey"),bambooKey).success(function(data){done(data)}).error(function(data){done(data)})},findBambooKey:function(companyId,done){var company={companyId:companyId};$http.post(Endpoint("key","find"),company).success(function(data){done(null,data)}).error(function(data){done(data,null),console.dir(data)})}}}]),angular.module("ettoPupil").factory("Fonts",[function(){var Fonts=["Open Sans","Roboto","Oswald","Lato","Droid Sans","PT Sans","Roboto Condensed","Source Sans Pro","Droid Serif","Raleway","Ubuntu","Montserrat","PT Sans Narrow","Roboto Slab","Arimo","Yanone Kaffeesatz","Lobster","Oxygen","Bitter","Lora","Arvo","Dosis","Francois One","Merriweather","PT Serif","Titillium Web","Noto Sans","Indie Flower","BenchNine","Play","Ubuntu Condensed","Fjalla One","Cabin","Signika","Shadows Into Light","Abel","Archivo Narrow","Nunito","Playfair Display","Libre Baskerville","Cuprum","Inconsolata","Muli","Rokkitt","Varela Round","Anton","Pacifico","Maven Pro","Asap","Merriweather Sans","Alegreya","Armata","Dancing Script","Josefin Sans","Poiret One","Bree Serif","Gloria Hallelujah","Droid Sans Mono","Crafty Girls","Exo","Pathway Gothic One","Karla","Coming Soon","Ubuntu Mono","Quicksand","Special Elite","PT Sans Caption","Vollkorn","Pontano Sans","Noto Serif","Cabin Condensed","Nobile","Monda","Hammersmith One","Bubblegum Sans","Audiowide","Ropa Sans","Questrial","News Cycle","Gudea","Sanchez","Varela","Kreon","Changa One","Istok Web","Old Standard TT","Chewy","Playball","Philosopher","Noticia Text","Quattrocento Sans","Luckiest Guy","Lemon","Rock Salt","Squada One","Patua One","Cantarell","Permanent Marker","Shadows Into Light Two"];return Fonts}]),angular.module("ettoPupil").factory("Endpoint",["$rootScope",function($rootScope){var Endpoint;return Endpoint=function(resource,method){var terms=[];return terms.push($rootScope.config.api.version),resource&&terms.push(resource),method&&terms.push(method),$rootScope.config.api.server+terms.join("/")}}]),angular.module("ettoPupil").factory("Session",["$http","$compile","$document","$modal","$location","$log","$resource","Endpoint",function($http,$compile,$document,$modal,$location,$log,$resource,Endpoint){var Session;return Session={treatSession:function(data){(data.err&&"Login"===data.err||!data)&&$location.path("/")},authenticate:function(user,callback){$http.post(Endpoint("auth","local"),user).success(function(data){callback(data)}).error(function(data){console.dir(data)})},getSession:function(callback){$http({method:"GET",url:Endpoint("auth","getSession")}).success(function(data){callback(data)}).error(function(data){console.log(data,"err")})},updateSession:function(user,callback){$http.post(Endpoint("auth","updateSession"),user).success(function(data){callback(data)}).error(function(data){console.dir(data)})},destroySession:function(callback){var Logout=$resource(Endpoint("auth","logout"));Logout.get(function(results){callback(results)})},loginModal:function(){$modal.open({templateUrl:"views/directives/ettoLogin.html",controller:function(){}})}}}]),angular.module("ettoPupil").factory("Course",["$resource","Endpoint",function($resource,Endpoint){return $resource(Endpoint("course"),{},{update:{method:"PUT"}})}]).factory("CourseLoader",["Course","$route","$q",function(Course,$route,$q){return function(){var delay=$q.defer();return Course.get({id:$route.current.params.courseId},function(course){delay.resolve(course)},function(){if("CourseEditCtrl"===$route.current.controller){var newCourse=new Course({_id:$route.current.params.courseId,blocks:[{type:"title",data:{title:"This is a new course!",subtitle:"Fill it with delicious educational goodness..."}}]});newCourse.$save(),delay.resolve(newCourse)}else delay.reject("Unable to fetch course "+$route.current.params.courseId)}),delay.promise}}]),angular.module("ettoPupil").factory("BlockType",["$resource","Endpoint",function($resource,Endpoint){return $resource(Endpoint("blocktype"),{},{update:{method:"PUT"}})}]),angular.module("ettoPupil").factory("Store",["$http","$resource","Endpoint",function($http,$resource,Endpoint){return{payments:function(id,callback){var Credit=$resource(Endpoint("store","findCredit")+"/:id",{id:id});Credit.get(function(u){callback(u)})},courseStore:function(callback){$http({method:"GET",url:Endpoint("store","course_store")}).success(function(data){callback(data)}).error(function(data){callback(data)})},purchase:function(order,callback){$http.post(Endpoint("store","purchase"),order).success(function(data){callback(data)}).error(function(data){console.dir(data)})},createRecipient:function(recipient,callback){$http.post(Endpoint("store","createRecipient"),recipient).success(function(data){callback(data)}).error(function(data){console.dir(data)})},findCards:function(id,callback){$http.get(Endpoint("store","findCards/")+id).success(function(data){callback(data)}).error(function(data){console.dir(data)})},deleteCards:function(url,callback){$http.get(Endpoint("store","deleteCards/")+url).success(function(data){callback(data)}).error(function(data){console.dir(data)})},findCredit:function(id,callback){$http({method:"GET",url:Endpoint("store","findCredit/")+id}).success(function(data){callback(data)}).error(function(data){callback(data)})}}}]),angular.module("ettoPupil").factory("CoursePlayer",["BlockQuiz","Record",function(BlockQuiz){var onBlock=0,lastEventBlock=0,locked=!1,course={blocks:[]},play=function(newCourse,playBlock){course=newCourse,onBlock=playBlock},unlock=function(){locked=!1},lock=function(){locked=!0},isLocked=function(){return locked},lastEvent=function(blocksChanged){lastEventBlock=blocksChanged},eventType=function(){return lastEventBlock},blocksInCourse=function(){return course.blocks.length},currentBlock=function(){return onBlock},onLastBlock=function(){return onBlock===blocksInCourse()-1},isCurrentBlock=function(block){return block===onBlock},prevBlock=function(){onBlock>0&&onBlock--},nextBlock=function(){onLastBlock()||onBlock++},switchToBlock=function(block){return blocksInCourse()>block?void(onBlock=block):-1},addBlock=function(blocktype,index){var newBlock={type:blocktype,data:{}};switch(lastEvent(1),blocktype){case"quiz":newBlock.data.questions=[BlockQuiz.getQuestion()]}return void 0!==index?(course.blocks.splice(index,0,newBlock),index):course.blocks.push(newBlock)-1},removeBlock=function(index){return course.blocks.splice(index,1),lastEvent(-1),blocksInCourse()},swapBlocks=function(a,b){if(0>a||0>b||a>blocksInCourse()-1||b>blocksInCourse()-1)return!1;lastEvent(69);var tmp=course.blocks[a];return course.blocks[a]=course.blocks[b],course.blocks[b]=tmp,!0},CoursePlayer={play:play,isLocked:isLocked,unlock:unlock,lock:lock,eventType:eventType,lastEvent:lastEvent,blocksInCourse:blocksInCourse,currentBlock:currentBlock,onLastBlock:onLastBlock,isCurrentBlock:isCurrentBlock,prevBlock:prevBlock,nextBlock:nextBlock,switchToBlock:switchToBlock,addBlock:addBlock,removeBlock:removeBlock,swapBlocks:swapBlocks};return CoursePlayer}]),angular.module("ettoPupil").factory("CourseList",["$http","$compile","$document","$modal","$location","$resource","Endpoint",function($http,$compile,$document,$modal,$location,$resource,Endpoint){var Courses;return Courses={storeCourses:function(callback){$http.get(Endpoint("store","storeCourses")).success(function(data){callback(data)}).error(function(data){console.dir(data)})},listAll:function(callback){$http.get(Endpoint("course")).success(function(data){callback(data)}).error(function(data){console.dir(data)})},listUsersCreatedCourses:function(id,callback){$http.get(Endpoint("user","listUsersCreatedCourses/")+id).success(function(data){callback(data)}).error(function(data){console.dir(data)})},listTiersCourses:function(tierId,callback){$http.get(Endpoint("course","listTiersCourses/")+tierId).success(function(data){callback(data)}).error(function(data){console.dir(data)})},listCompanyCourses:function(tierId,done){var Courses=$resource(Endpoint("course","listCompanyCourses/")+":id",{id:tierId});Courses.query(function(results){done(results)})}}}]),angular.module("ettoPupil").factory("CourseMetaChange",["$http","Endpoint",function($http,Endpoint){var CourseMetaChange;return CourseMetaChange={create:function(newCourse,callback){$http.post(Endpoint("course"),newCourse).success(function(data){callback(data)}).error(function(data){console.dir(data)})},removeCourse:function(course,callback){$http.post(Endpoint("course","destroy"),course).success(function(data){callback(data)}).error(function(data){console.dir(data)})}}}]),angular.module("ettoPupil").factory("Users",["$http","$resource","Endpoint",function($http,$resource,Endpoint){var User;return User={updateUsersTier:function(tier,callback){$http.post(Endpoint("user","update_users_tier"),tier).success(function(data){callback(data)}).error(function(data){callback(data)})},listUsersCourses:function(id,callback){var Courses=$resource(Endpoint("user","listUsersCourses")+"/:id",{id:id});Courses.query(function(results){callback(results)})},listUserCoursesRecords:function(id,callback){var Courses=$resource(Endpoint("user","listUserCoursesRecords")+"/:id",{id:id});Courses.query(function(results){callback(results)})},searchUser:function(text,callback){var Search=$resource(Endpoint("user","searchUser")+"/:text",{text:text});Search.query(function(results){callback(results)})},saveNewUser:function(user,callback){$http.post(Endpoint("user","saveNewUser"),user).success(function(data){callback(data)}).error(function(data){callback(data),console.dir(data)})},inviteUser:function(data,callback){$http.post(Endpoint("user","inviteUser"),data).success(function(data){callback(data)}).error(function(data){console.dir(data)})},listUsersInTier:function(id,callback){$http.get(Endpoint("user","listUsersInTier/")+id).success(function(data){callback(data)}).error(function(data){console.dir(data)})},inviteDetails:function(id,callback){$http.get(Endpoint("user","inviteDetails/")+id).success(function(data){callback(data)}).error(function(data){console.dir(data)})},fullDetails:function(id,callback){$http.get(Endpoint("user","fullDetails/")+id).success(function(data){callback(data)}).error(function(data){console.dir(data)})},update:function(user,callback){$http.post(Endpoint("user","update"),user).success(function(data){callback(data)}).error(function(data){console.dir(data)})}}}]),angular.module("ettoPupil").factory("Tiers",["$http","Endpoint",function($http,Endpoint){return{listChildrenAndCountUsers:function(tier,callback){$http.post(Endpoint("tier","list_children_and_count_users"),tier).success(function(data){callback(data)}).error(function(data){console.dir(data)})},updateLeaderboard:function(tier,callback){$http.post(Endpoint("tier","updateLeaderboard"),tier).success(function(data){callback(data)}).error(function(data){console.dir(data)})},changeWhiteLabel:function(tier,callback){$http.post(Endpoint("tier","changeWhiteLabel"),tier).success(function(data){callback(data)}).error(function(data){console.dir(data)})},addTier:function(newTier,callback){$http.post(Endpoint("tier","add"),newTier).success(function(data){callback(data)})},createCompany:function(newTier,callback){$http.post(Endpoint("tier","createCompany"),newTier).success(function(data){callback(data)})},removeTier:function(tier,callback){$http.post(Endpoint("tier","remove"),tier).success(function(data){callback(data)})},findTier:function(tierID,callback){$http.get(Endpoint("tier/")+tierID).success(function(data){callback(data)})},distributeCourseToTiers:function(obj,callback){$http.post(Endpoint("tier","distributeCourseToTiers"),obj).success(function(data){callback(data)
})},tierReport:function(id,callback){$http.get(Endpoint("record","tierReport/")+id).success(function(data){callback(data)})},addCourseToTier:function(tierId,courseId,addAllLowerTiers,callback){var query=tierId+"?courseId="+courseId+"&addAllLowerTiers="+addAllLowerTiers;$http.get(Endpoint("tier","addCourseToTier/")+query).success(function(data){callback(data)})},removeCourseFromTiers:function(tierId,courseId,callback){var query=tierId+"?courseId="+courseId;$http.get(Endpoint("tier","removeCourseFromTiers/")+query).success(function(data){callback(data)})},updateTier:function(tier,callback){$http.post(Endpoint("tier","update"),tier).success(function(data){callback(data)})},inviteUser:function(newLevel,callback){$http.post(Endpoint("sessions","invite_user"),newLevel).success(function(data){callback(data)})},syncBambooHR:function(keys,callback){$http.post(Endpoint("tier","syncBambooHR"),keys).success(function(data){callback(null,data)}).error(function(data){console.dir(data,null),callback(data,null)})}}}]),angular.module("ettoPupil").factory("Payment",["$resource","Endpoint",function($resource,Endpoint){return{subscriptions:function(callback){var Subscriptions=$resource(Endpoint("store","getSubscriptions"));Subscriptions.query(function(results){callback(results)})},cancelSubscription:function(companyId,callback){var Subscriptions=$resource(Endpoint("store","cancelSubscription")+"/:companyId",{companyId:companyId});Subscriptions.get(function(results){callback(results)})},companyPurchases:function(companyId,callback){var Purchases=$resource(Endpoint("credit","companyPurchases")+"/:id",{id:companyId});Purchases.query(function(results){callback(results)})},companyRecieved:function(companyId,callback){var Payment=$resource(Endpoint("credit","companyRecieved")+"/:id",{id:companyId});Payment.query(function(results){callback(results)})},companyCreditsUsed:function(companyId,callback){var Used=$resource(Endpoint("credit","companyCreditsUsed")+"/:id",{id:companyId});Used.get(function(results){callback(results)})},checkCanAddCourse:function(companyId,callback){var Subscriptions=$resource(Endpoint("store","checkCanAddCourse")+"/:companyId",{companyId:companyId});Subscriptions.get(function(results){callback(results)})}}}]),angular.module("ettoPupil").factory("Tier",["$resource","Endpoint",function($resource,Endpoint){return{findTier:function(id,callback){var FindTier=$resource(Endpoint("tier")+"/:id",{id:id});FindTier.get(function(results){callback(results)})},listTiersCourses:function(id,callback){var Courses=$resource(Endpoint("course","listTiersCourses")+"/:id",{id:id});Courses.query(function(results){callback(results)})},getCompany:function(id,callback){var Company=$resource(Endpoint("tier","getCompany")+"/:id",{id:id});Company.get(function(results){callback(results)})},listCompanyCreatedCourses:function(id,callback){var Courses=$resource(Endpoint("course","listCompanyCreatedCourses")+"/:id",{id:id});Courses.query(function(results){callback(results)})},searchTiers:function(text,callback){var Tiers=$resource(Endpoint("tier","searchTiers")+"/:text",{text:text});Tiers.query(function(results){callback(results)})}}}]),angular.module("ettoPupil").factory("Record",["$resource","Endpoint",function($resource,Endpoint){return{create:function(courseId,userId,callback){var Record=$resource(Endpoint("record","create")+"/:userId",{courseId:courseId,userId:userId});Record.get(function(results){callback(results)})},userOverallProgress:function(userId,tierId,done){var Record=$resource(Endpoint("record","userOverallProgress")+"/:userId",{userId:userId,tierId:tierId});Record.get(function(results){done(results)})},updateBookmark:function(id,bookmark,totalBlocks){var Record=$resource(Endpoint("record","updateBookmark")+"/:id",{id:id,bookmark:bookmark,totalBlocks:totalBlocks});Record.get(function(){})}}}]),angular.module("ettoPupil").factory("Asset",["$rootScope","$resource","$http","Endpoint",function($rootScope,$resource,$http,Endpoint){var resourceName="asset",resourceBase=$rootScope.config.api.server+[$rootScope.config.api.version,resourceName].join("/"),Asset=$resource(Endpoint("asset",":_id"),{_id:"@_id"},{update:{method:"PUT"}});return Asset.prototype.getS3Policy=function(fileObj,done){var self=this;$http.get(resourceBase+"/getS3Policy?fileName="+fileObj.name+"&mimeType="+fileObj.type).success(function(response){self.s3=response,done(response)})},Asset}]).factory("AssetLoader",["Asset","$route","$q",function(Asset,$route,$q){return function(){var delay=$q.defer();return $route.current.params.assetId?Asset.get({id:$route.current.params.assetId},function(asset){delay.resolve(asset)},function(){}):Asset.query({},function(assets){delay.resolve(assets)},function(){}),delay.promise}}]),angular.module("ettoPupil").factory("httpInterceptor",["$q","$rootScope",function($q,$rootScope){return{request:function(config){return config||$q.when(config)},requestError:function(rejection){return $q.reject(rejection)},response:function(response){return response||$q.when(response)},responseError:function(rejection){return 401===rejection.status&&$rootScope.$broadcast("401"),$q.reject(rejection)}}}]),angular.module("ettoPupil").factory("BlockQuiz",[function(){var alphabet=["a","b","c","d","e","f","g","z"],getQuestion=function(){var question={question:"Question",answers:[{answer:"Answer",correct:!1}]};return question},deleteAnswer=function(answers,index){answers.splice(index,1)},deleteQuestion=function(questions,index){questions.splice(index,1)},BlockQuiz={getQuestion:getQuestion,alphabet:alphabet,deleteAnswer:deleteAnswer,deleteQuestion:deleteQuestion};return BlockQuiz}]),angular.module("ettoPupil").factory("Invite",[function(){var defaultAuth={canPurchase:!1,canGetCourses:!0,canCreateCourses:!0,canInvite:!0,canEditCompany:!1},defaultUser={emails:[""],auth:defaultAuth},Invite={defaultAuth:defaultAuth,defaultUser:defaultUser};return Invite}]),angular.module("ettoPupil").factory("Security",["$http","$resource","Endpoint",function($http,$resource,Endpoint){var Security;return Security={sendForgotPw:function(email,callback){var user={email:email};$http.post(Endpoint("user","sendForgotPw"),user).success(function(data){callback(data)}).error(function(data){console.dir(data)})},verifyPasswordReset:function(code,callback){var verifyPasswordReset=$resource(Endpoint("user","verifyPasswordReset")+"/:code",{code:code});verifyPasswordReset.get(function(results){callback(results)})},updatePassword:function(user,callback){$http.post(Endpoint("user","updatePassword"),user).success(function(data){callback(data)}).error(function(data){console.dir(data)})}}}]);